
plus(zero, Y) -> Y
plus(succ(X), Y) -> plus(X, succ(Y))

ackermann(zero, Y) -> succ(Y)
ackermann(succ(X), zero) -> ackermann(X, succ(zero))
ackermann(succ(X), succ(Y)) -> ackermann(X, ackermann(succ(X), Y))

MARKING {
  input: succ(succ(succ(succ(zero))))
}

TRANSITION compute {
  MATCH {
    input: X
  }
  PRODUCE {
    output: ackermann(succ(succ(succ(zero))), X)
  }
}