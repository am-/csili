INSTANCES {
  not: not
  or: or
}

INTERFACE {
  INPUT {
    input1
    input2
  }
  OUTPUT {
    output
  }
}

TRANSITION negate {
  MATCH {
    input1: A
  }
  PRODUCE {
    not.input: A
  }
}

TRANSITION leftOperand {
  MATCH {
    not.output: NotA
  }
  PRODUCE {
    or.input1: NotA
  }
}

TRANSITION rightOperand {
  MATCH {
    input2: B
  }
  PRODUCE {
    or.input2: B
  }
}

TRANSITION imply {
  MATCH {
    or.output: AImpliesB
  }
  PRODUCE {
    output: AImpliesB
  }
}

TEMPLATE not {
  INTERFACE {
    INPUT {
      input
    }
    OUTPUT {
      output
    }
  }

  TRANSITION notTrue {
    MATCH {
      input: true
    }
    PRODUCE {
      output: false
    }
  }

  TRANSITION notFalse {
    MATCH {
      input: false
    }
    PRODUCE {
      output: true
    }
  }
}

TEMPLATE or {
  INTERFACE {
    INPUT {
      input1
      input2
    }
    OUTPUT {
      output
    }
  }

  TRANSITION firstTrue {
    MATCH {
      input1: true
      input2: B
    }
    PRODUCE {
      output: true
    }
  }

  TRANSITION firstFalse {
    MATCH {
      input1: false
      input2: B
    }
    PRODUCE {
      output: B
    }
  }
}
